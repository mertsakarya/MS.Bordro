@using MS.Bordro.Web.Models
@using MS.Bordro.Web.ViewModels
@model IPagedList<WorkRequestModel>

@{
    ViewBag.Title = "Work Requests";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
 
<h2>Work Requests</h2>

@(Html.Telerik().Grid(Model.Items)
    .Name("WorkRequestGrid")
    .DataBinding(dataBinding => dataBinding
        .Ajax()
        .Select("IndexAjax", "WorkRequest")
        .Insert("Insert", "WorkRequest")
        .Update("Update", "WorkRequest")
        .Delete("Delete", "WorkRequest")
    )
    //.DetailView(detailView => detailView.ClientTemplate(
    //    Html.Telerik().Grid<WorkRequestModel>()
    //        .ToolBar(commands => commands.Insert())
    //        .Editable(editing => editing.Mode(GridEditMode.InLine))
    //        .DataKeys(dataKeys => dataKeys.Add(c => c.Id))
    //        .Name("Locations_<#= Id#>")
    //        .DataBinding(dataBinding => dataBinding
    //            .Ajax()
    //            .Select("IndexByKeyAjax", "WorkRequestLocation", new { Id = "<#= Id #>" })
    //            .Insert("Insert", "WorkRequestLocation", new { WorkRequestId = "<#= Id #>" })
    //            .Update("Update", "WorkRequestLocation")
    //            .Delete("Delete", "WorkRequestLocation")
    //        )
    //        .Columns(columns => {
    //            columns.Bound(o => o.Name);
    //            columns.Bound(o => o.Address);
    //            columns.Bound(o => o.CommunicationName);
    //            columns.Bound(o => o.CommunicationPhone).Width(200);
    //            columns.Bound(o => o.CreationDate).Format("{0:d}");
    //            columns.Command(commands => { commands.Edit(); commands.Delete(); });
    //        })
    //        .Pageable()
    //        .Sortable()
    //        .Filterable()
    //        .ToHtmlString()
    //    )
    //)
    .DataKeys(dataKeys => dataKeys.Add(c => c.Id))
    .ToolBar(commands => commands.Insert())
    .Editable(editing => editing.Mode(GridEditMode.InLine))
    .Columns(columns => {
        columns.Bound(o => o.Date);
        columns.Bound(o => o.Money);
        columns.Command(commands => { commands.Edit(); commands.Delete(); });
    })
    .Pageable(settings => {
        settings.Enabled(true);
        settings.Total(Model.TotalRecords);
        settings.PageTo(Model.Page);
        settings.PageSize(Model.PageSize);
        settings.Position(GridPagerPosition.Bottom);
        settings.Style(GridPagerStyles.PageInput | GridPagerStyles.Numeric | GridPagerStyles.NextPreviousAndDropDown);
    })
    .Sortable()
    .Footer(true) 
    .EnableCustomBinding(true)
)


    